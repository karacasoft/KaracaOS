KERNEL_DIR = kernel
KERNEL_ARCHDIR := $(KERNEL_DIR)/arch/$(TARGETARCH)

KERNEL_SRC := $(shell find ./$(KERNEL_DIR) -type f \( -name "*.c" -o -name "*.S" \) -a ! -name "crt*.S")

KERNEL_HDR := $(shell find ./$(KERNEL_DIR) -type f -name "*.h")

KERNEL_OBJ := $(patsubst %.S,%.o,$(patsubst %.c,%.o,$(KERNEL_SRC)))

KERNEL_DEPFILES := $(patsubst %.S,%.d,$(patsubst %.c,%.d,$(KERNEL_SRC)))

CRTI_OBJ = $(KERNEL_ARCHDIR)/crti.o
CRTBEGIN_OBJ := $(shell $(CC) $(CFLAGS) -print-file-name=crtbegin.o)
CRTEND_OBJ := $(shell $(CC) $(CFLAGS) -print-file-name=crtend.o)
CRTN_OBJ = $(KERNEL_ARCHDIR)/crtn.o

KERNEL_OBJLINKLIST := $(CRTI_OBJ) \
	                  $(CRTBEGIN_OBJ) \
	                  $(KERNEL_OBJ) \
	                  $(CRTEND_OBJ) \
	                  $(CRTN_OBJ)

KERNEL_CFLAGS := $(CFLAGS) -ffreestanding

KERNEL_LINKED_OBJ := $(KERNEL_DIR)/karacaos.kernel

.PHONY: kernel kernel-clean kernel-install
.SUFFIXES: .o .c .S

kernel: kernel-install-headers $(KERNEL_LINKED_OBJ)
	echo "Build kernel complete"

kernel-clean:
	-rm -f $(KERNEL_LINKED_OBJ) $(KERNEL_OBJ) $(KERNEL_DEPFILES) $(CRTI_OBJ) $(CRTN_OBJ)

kernel-install: kernel-install-kernel
	echo "Install complete :+1:"

kernel-install-headers: $(KERNEL_HDR)
	cp -R $(KERNEL_DIR)/include/. $(DESTDIR)/$(INCLUDEDIR)

kernel-install-kernel: $(KERNEL_LINKED_OBJ)
	cp $(KERNEL_LINKED_OBJ) $(DESTDIR)/$(BOOTDIR)

$(KERNEL_LINKED_OBJ): $(KERNEL_OBJ) $(CRTI_OBJ) $(CRTN_OBJ)
	$(CC) $(KERNEL_CFLAGS) -T $(KERNEL_ARCHDIR)/linker.ld $(KERNEL_OBJLINKLIST) -nostdlib -lgcc -o $@

$(KERNEL_ARCHDIR)/crt%.o: $(KERNEL_ARCHDIR)/crt%.S
	$(CC) $(KERNEL_CFLAGS) -c $< -o $@

%.o: %.S
	$(CC) $(KERNEL_CFLAGS) -c -MMD $< -o $@

%.o: %.c
	$(CC) $(KERNEL_CFLAGS) -c -MMD -MP $< -o $@

-include $(KERNEL_DEPFILES)
